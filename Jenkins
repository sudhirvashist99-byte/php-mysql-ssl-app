pipeline {
    agent { label 'BhServer' }
    environment {
        SSL_DIR = "${WORKSPACE}/nginx/ssl"
        DOCKER_COMPOSE_DIR = "${WORKSPACE}"
    }
    stages {
        stage('Cleanup Old Docker Data') {
            steps {
                echo 'Cleaning up old Docker containers, images, networks, and volumes...'
                sh '''
                    # Stop and remove all containers
                    docker ps -aq | xargs -r docker stop
                    docker ps -aq | xargs -r docker rm

                    # Remove dangling images
                    docker image prune -af

                    # Remove all unused images, networks, and volumes
                    docker system prune -af --volumes
                '''
                echo 'Docker cleanup complete.'
            }
        }
        
        stage('Code Clone') {
            steps {
                git url: "https://github.com/sudhirvashist99-byte/php-mysql-app.git", branch: "main"
                echo 'Code cloned from Git successfully.'
            }
        }
        stage('Generate SSL Certificate') {
            steps {
                echo 'Generating SSL'
                sh '''
                    openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
                        -keyout ssl/nginx-selfsigned.key -out ssl/nginx-selfsigned.crt

                    echo "Certificate generated successfully:"
                '''
            }
        }
        stage('Build') {
            steps {
                sh "docker compose build"
                echo "Docker build created successfully on remote server."
            }
        }

        stage('Test') {
            steps {
                echo 'Running tests...'
                // Add test commands here if needed
            }
        }

        stage('Push Image to Docker') {
            steps {
                echo 'Pushing Docker image...'
                // Add Docker push commands here if needed
            }
        }

        stage('Deploy') {
            steps {
                sh '''
                    docker compose down
                    docker compose up -d
                '''
                echo "Docker deployment completed successfully on remote server."
            }
        }
    }
}
